<?xml version="1.0"?>
<ruleset name="LifterLMS" namespace="LifterLMS-CS\LifterLMS">

	<description>LifterLMS Coding Standards</description>

	<!-- Evalute PHP and JS files. -->
	<arg name="extensions" value="php,js" />

    <!-- Show Progress -->
    <arg value="sp" />

    <!-- Excludes -->
    <exclude-pattern>assets/js/*.min.js</exclude-pattern>

    <exclude-pattern>tests/*</exclude-pattern>
    <exclude-pattern>tmp/*</exclude-pattern>
    <exclude-pattern>wordpress/*</exclude-pattern>
    <exclude-pattern>vendor/*</exclude-pattern>
    <exclude-pattern>node_modules/*</exclude-pattern>
    <exclude-pattern>gulpfile.js/*</exclude-pattern>

	<rule ref="WordPress">
		<!-- @todo: need to find a way to handle escaping custom functions easily -->
		<exclude name="WordPress.Security.EscapeOutput" />
	</rule>

	<!-- Add `llms_verify_nonce` to the list of allowed nonce verification functions -->
	<rule ref="WordPress.Security.NonceVerification">
		<properties>
			<property name="customNonceVerificationFunctions" type="array">
				<element value="llms_verify_nonce" />
			</property>
		</properties>
	</rule>

	<!-- ##### SNIFF FOR PHP CROSS-VERSION COMPATIBILITY ##### -->
	<config name="testVersion" value="7.2-" />
	<rule ref="PHPCompatibilityWP" />

	<!-- Exclude the 'empty' index files from documentation checks -->
	<rule ref="Squiz.Commenting.FileComment">
		<exclude-pattern>*/index\.php</exclude-pattern>
	</rule>
	<rule ref="LifterLMS.Commenting.FileComment">
		<exclude-pattern>*/index\.php</exclude-pattern>
	</rule>

	<!-- Allow anonymous functions on a single line in JS -->
	<rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket">
		<exclude-pattern>*/*.js</exclude-pattern>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine">
		<exclude-pattern>*/*.js</exclude-pattern>
	</rule>
	<rule ref="PEAR.Functions.FunctionCallSignature.MultipleArguments">
		<exclude-pattern>*/*.js</exclude-pattern>
	</rule>

</ruleset>
